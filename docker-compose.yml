version: "3.1"

services:
  mysql:
    image: mysql:latest
    container_name: my-mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: winarien
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    networks:
      - my-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "admin",
          "-padmin",
        ]
      interval: 5s
      timeout: 5s
      retries: 10
    command: ["--default-authentication-plugin=caching_sha2_password"]

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "6379:6379"
    networks:
      - my-network
    restart: on-failure

  match-all:
    build:
      context: ./getAllMatch
      dockerfile: Dockerfile-getAllMatch.yml
    container_name: matchAll-container
    ports:
      - "3000:3000"
    networks:
      - my-network
    depends_on:
      mysql:
        condition: service_healthy
    restart: on-failure

  match-state:
    build:
      context: ./matchStateService
      dockerfile: Dockerfile-matchStateService.yml
    container_name: matchState-container
    ports:
      - "3001:3001"
    networks:
      - my-network
    depends_on:
      mysql:
        condition: service_healthy
    restart: on-failure

  generate-matches:
    build:
      context: ./generateMatches
      dockerfile: Dockerfile-generateMatches.yml
    container_name: generateMatches-container
    ports:
      - "3002:3002"
    networks:
      - my-network
    depends_on:
      - match-all

    restart: on-failure

networks:
  my-network:
    driver: bridge
